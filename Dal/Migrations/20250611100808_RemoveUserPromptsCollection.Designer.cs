// <auto-generated />
using System;
using Dal.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dal.Migrations
{
    [DbContext(typeof(LearningPlatformContext))]
    [Migration("20250611100808_RemoveUserPromptsCollection")]
    partial class RemoveUserPromptsCollection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dal.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__categori__3213E83F961DCF68");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Dal.Entities.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Prompt1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prompt");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("response");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__prompts__3213E83F1E627FB9");

                    b.HasIndex("UserId1");

                    b.HasIndex(new[] { "CategoryId" }, "idx_prompts_category_id");

                    b.HasIndex(new[] { "SubCategoryId" }, "idx_prompts_sub_category_id");

                    b.HasIndex(new[] { "UserId" }, "idx_prompts_user_id");

                    b.ToTable("prompts", (string)null);
                });

            modelBuilder.Entity("Dal.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__sub_cate__3213E83F9B2D00ED");

                    b.HasIndex("CategoryId");

                    b.ToTable("sub_categories", (string)null);
                });

            modelBuilder.Entity("Dal.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F43B87EEB");

                    b.HasIndex(new[] { "Phone" }, "UQ__users__B43B145FF9BF57F6")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Dal.Entities.Prompt", b =>
                {
                    b.HasOne("Dal.Entities.Category", "Category")
                        .WithMany("Prompts")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_prompts_category_id");

                    b.HasOne("Dal.Entities.SubCategory", "SubCategory")
                        .WithMany("Prompts")
                        .HasForeignKey("SubCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_prompts_sub_category_id");

                    b.HasOne("Dal.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_prompts_user_id");

                    b.HasOne("Dal.Entities.User", null)
                        .WithMany("Prompts")
                        .HasForeignKey("UserId1");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dal.Entities.SubCategory", b =>
                {
                    b.HasOne("Dal.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_sub_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Dal.Entities.Category", b =>
                {
                    b.Navigation("Prompts");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Dal.Entities.SubCategory", b =>
                {
                    b.Navigation("Prompts");
                });

            modelBuilder.Entity("Dal.Entities.User", b =>
                {
                    b.Navigation("Prompts");
                });
#pragma warning restore 612, 618
        }
    }
}
